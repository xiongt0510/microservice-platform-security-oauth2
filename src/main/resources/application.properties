server.port=9091

redis.hostName=localhost
#端口号
redis.port=6379
#如果有密码
redis.password=
#客户端超时时间单位是毫秒 默认是2000
redis.timeout=10000

#最大空闲数
redis.maxIdle=300
#连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal
#redis.maxActive=600
#控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
redis.maxTotal=1000
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
redis.maxWaitMillis=1000
#连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.minEvictableIdleTimeMillis=300000
#每次释放连接的最大数目,默认3
redis.numTestsPerEvictionRun=1024
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.timeBetweenEvictionRunsMillis=30000
#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
redis.testOnBorrow=true
#在空闲时检查有效性, 默认false
redis.testWhileIdle=true


oauth2.server.clients[0].clientId =anjuxing
oauth2.server.clients[0].clientSecret=ajx@2018
oauth2.server.clients[0].accessTokenValidateSeconds = 3600
oauth2.server.clients[0].authorizedGrantTypes[0]=refresh_token
oauth2.server.clients[0].authorizedGrantTypes[1]=authorization_code
oauth2.server.clients[0].authorizedGrantTypes[2]=password
oauth2.server.clients[0].scopes[0]=all
oauth2.server.clients[0].scopes[1]=read

oauth2.server.clients[1].clientId =test
oauth2.server.clients[1].clientSecret=test
oauth2.server.clients[1].accessTokenValidateSeconds = 3600
oauth2.server.clients[1].authorizedGrantTypes[0]=refresh_token
oauth2.server.clients[1].authorizedGrantTypes[1]=password
oauth2.server.clients[1].scopes[0]=read
oauth2.server.clients[1].scopes[1]=writer


eureka.client.service-url.defaultZone= http://localhost:9000/eureka/
spring.application.name=microserver-platform-security-oauth2







